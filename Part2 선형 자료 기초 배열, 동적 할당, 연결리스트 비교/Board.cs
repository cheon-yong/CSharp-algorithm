using System;
using System.Collections.Generic;
using System.Text;

namespace Part2_선형_자료_기초_배열__동적_할당__연결리스트_비교
{
    class Board
    {
        //아래 3개 중에 어떤 것을 사용해야할까??
        /*
         * 자료구조는 선형자료구조와 비선형자료구조로 구분할 수 있다
         * 선형자료구조는 자료를 순차적으로 저장한 구조
         * 배열, 연결리스트, 스택, 큐 등
         * 
         * 비선형구조는 하나의 자료 뒤에 다수의 자료가 올 수 있는 형태
         * 트리 또는 그래프 등
         * 
         * 배열 vs 동적 배열 vs 연결리스트
         * 
         * 배열
         * 호텔에 비유를 하면 사용할 방의 개수를 고정해서 계약하고(절대 변경 불가)
         * 연속된 방으로 배정받아 사용
         * 
         * 장점 : 연속된 방
         * 단점 : 방을 추가/축소 불가
         * 
         * 
         * 
         * 동적배열
         * 사용할 방의 수를 유동적으로 계약
         * 연속된 방으로 배정 받아 사용
         * 
         * 문제점 : 101 ~ 103호를 예약했다가 104호를 추가한다고 가정할 때,
         * 104호가 이미 배정되어 있으면 사용할 수 있는 다른 곳으로 이동
         * ex) 301 ~ 304
         * 이럴 경우 비용이 발생
         * 
         * 해결 : 실제로 사용할 방보다 많이, 여유분을 두고 예약(약 1.5 ~ 2배)
         * 이사수를 최소화
         * 
         * 장점 : 유동적인 계약(방추가 예약으로 이사횟수를 초기화)
         * 단점 : 중간 삽입/삭제가 어렵다
         * 
         * 
         * 연결리스트
         * 연속되지 않은 방을 사용
         * ex) 101호, 202호, 304호 등
         * 
         * 장점 : 중간 추가/삭제가 용이
         * 단점 : N번째 방을 바로 찾을 수 없음(임의 접근 즉 Random Access 불가)
         * 
         */
        public int[] _data = new int[25];
        public List<int> _data2 = new List<int>();
        public LinkedList<int> _data3 = new LinkedList<int>();

        public void Initialize()
        {

        }
    }
}
